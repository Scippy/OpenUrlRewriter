<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="404Intro.Text" xml:space="preserve">
    <value>Enabling ‘Enhanced 404’ will modify all your module urls (unless they are created by a provider). Create Custom Rewrite rules to resolve this.</value>
  </data>
  <data name="404Tab.Text" xml:space="preserve">
    <value>404 Not found Tab</value>
  </data>
  <data name="DisablePivacyIndex.Help" xml:space="preserve">
    <value>Meta Robots NOINDEX,NOFOLOW for Privacy page</value>
  </data>
  <data name="DisablePivacyIndex.Text" xml:space="preserve">
    <value>Disable privacy indexing</value>
  </data>
  <data name="DisableSiteIndex.Help" xml:space="preserve">
    <value>Meta Robots NOINDEX,NOFOLOW for whole site</value>
  </data>
  <data name="DisableSiteIndex.Text" xml:space="preserve">
    <value>Disable site indexing</value>
  </data>
  <data name="DisableTermsIndex.Help" xml:space="preserve">
    <value>Meta Robots NOINDEX,NOFOLOW for Terms page</value>
  </data>
  <data name="DisableTermsIndex.Text" xml:space="preserve">
    <value>Disable terms indexing</value>
  </data>
  <data name="EditModule.Text" xml:space="preserve">
    <value>Edit Module</value>
  </data>
  <data name="Enhanced404.Text" xml:space="preserve">
    <value>Enhanced 404 Not found support</value>
  </data>
  <data name="Intro.Text" xml:space="preserve">
    <value>Url log settings</value>
  </data>
  <data name="LogAuthentificatedUsers.Text" xml:space="preserve">
    <value>Log authentificated users</value>
  </data>
  <data name="LogEachUrlOneTime.Text" xml:space="preserve">
    <value>Log Each Url One Time</value>
  </data>
  <data name="LogEnabled.Text" xml:space="preserve">
    <value>Log Enabled</value>
  </data>
  <data name="LogStatusCode200.Text" xml:space="preserve">
    <value>Log StatusCode 200</value>
  </data>
  <data name="PageMetaIntro.Text" xml:space="preserve">
    <value>Disable page indexing by search engines (Meta Robots NOINDEX,NOFOLOW)</value>
  </data>
  <data name="SitemapProvider.Text" xml:space="preserve">
    <value>SitemapProvider</value>
  </data>
  <data name="TestIntro.Text" xml:space="preserve">
    <value>Test, Search &amp; Replace urls in Html from any database table</value>
  </data>
  <data name="W3C.Text" xml:space="preserve">
    <value>Make pages compatible W3C</value>
  </data>
  <data name="W3CIntro.Text" xml:space="preserve">
    <value>W3C settings</value>
  </data>
</root>